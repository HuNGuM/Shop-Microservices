server.port=8081
spring.application.name=auth-service

# Kafka Producer config
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# JWT / Security config
jwt.secretKey=JWTSuperSecretKey
keystore.password=yourKeystorePassword
jwt.expirationTimeMs=900000
account.verification.url=http://localhost:8081/api/auth/accountVerification

# MongoDB Database Config for auth-service
spring.data.mongodb.uri=mongodb://localhost:27017/authDB

################### Redis Config###########################################
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
###########################################Google OAuth2###########################################
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
google.client-id=your-google-client-id-here
google.client-secret=your-google-client-secret-here





